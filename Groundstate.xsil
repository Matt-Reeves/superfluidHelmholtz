<?xml version="1.0" ?><simulation xmds-version="2">
<name>dGPE_GroundState</name>
<author>Matt Reeves</author>
<description>
Calculate ground state of BEC by propagating the dGPE in imaginary time
</description>

<features>

<validation kind="run-time"/>
   <arguments>
     <argument name="xmin" type="real" default_value="-128.0"/>
     <argument name="xmax" type="real" default_value="128.0"/>
     <argument name="ymin" type="real" default_value="-128.0"/>
     <argument name="ymax" type="real" default_value="128.0"/>
     <argument name="numGridPoints1" type="integer" default_value="256"/>
     <argument name="numGridPoints2" type="integer" default_value="256"/>
   </arguments>

<auto_vectorise/>
<benchmark/>
<bing/>
<!--<openmp />  -->
<fftw plan="patient"/>
<globals>
<![CDATA[
        const double  Uint = 1;
        const double gamma0 = 0.1;
        const double mu0 = 1.0;
        ]]>
</globals>

</features>

<geometry>
<propagation_dimension> t </propagation_dimension>
<transverse_dimensions>
<dimension name="x" lattice="numGridPoints1" domain="(xmin, xmax)"/>  
<dimension name="y" lattice="numGridPoints2" domain="(ymin, ymax)"/>
</transverse_dimensions>
</geometry>

<vector name="potential" dimensions="x y" type="real">
  <components> V </components>
  <initialisation kind="hdf5">
      <filename> Potential.h5 </filename>  
  </initialisation>
</vector>

<vector name="wavefunction" dimensions="x y" type="complex">
<components> phi</components>
<initialisation>
<dependencies> potential </dependencies>
<![CDATA[

if (V<mu0)
{
        const double n0_root = sqrt((mu0-V)/Uint);
        phi = n0_root;
}
else 
{
phi = 0.0;
}
                         ]]>

</initialisation>
</vector>

<sequence cycles="1">
<filter>
<![CDATA[
                 printf("Hello world from a filter segment!\n");
                 ]]>
</filter>


<integrate algorithm="ARK45" interval="100" steps="8000" tolerance="1e-5">
<samples> 100</samples>

<operators>
<operator kind="ex" constant="yes" type="complex">
<operator_names>T </operator_names>
<![CDATA[
                 T = -0.5*(gamma0+i)*(kx*kx + ky*ky);  
                 ]]>
</operator>
<integration_vectors>wavefunction</integration_vectors>
<dependencies>potential</dependencies>
<![CDATA[
                 dphi_dt = T[phi] + (i+gamma0)*(mu0-V-Uint*mod2(phi))*phi;
                 ]]>
</operators>

</integrate>

<breakpoint filename="Groundstate.xsil" format="hdf5">
<dependencies>wavefunction </dependencies>
</breakpoint>

</sequence>

<output filename="Helium" format="hdf5">
<sampling_group basis="x(0) y(0)" initial_sample="no">
<moments> Natoms</moments>
<dependencies> wavefunction </dependencies>
<![CDATA[
        Natoms = mod2(phi);
                 ]]> 
</sampling_group>

</output>

<info>
Script compiled with XMDS2 version 3.0.0 "Release the Kraken" (r3072)
See http://www.xmds.org for more information.

Variables that can be specified on the command line:
  Command line argument xmin = -1.280000e+02
  Command line argument xmax = 1.280000e+02
  Command line argument ymin = -1.280000e+02
  Command line argument ymax = 1.280000e+02
  Command line argument numGridPoints1 = 256
  Command line argument numGridPoints2 = 256
</info>

<XSIL Name="breakpoint">
  <Param Name="n_independent">2</Param>
  <Array Name="variables" Type="Text">
    <Dim>4</Dim>
    <Stream><Metalink Format="Text" Delimiter=" \n"/>
x y phiR phiI 
    </Stream>
  </Array>
  <Array Name="data" Type="double">
    <Dim>256</Dim>
    <Dim>256</Dim>
    <Dim>4</Dim>
    <Stream><Metalink Format="HDF5" Type="Remote" Group="/1"/>
Groundstate.h5
    </Stream>
  </Array>
</XSIL>
</simulation>
